// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tpvoiture.Models;

namespace tpvoiture.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230308105312_creation")]
    partial class creation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tpvoiture.Models.Assurance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VoitureId")
                        .HasColumnType("int");

                    b.Property<string>("agence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_fin")
                        .HasColumnType("datetime2");

                    b.Property<int>("prix")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("VoitureId");

                    b.ToTable("assurances");
                });

            modelBuilder.Entity("tpvoiture.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("tpvoiture.Models.Location", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("VoitureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_fin")
                        .HasColumnType("datetime2");

                    b.Property<int>("prixjour")
                        .HasColumnType("int");

                    b.Property<bool>("retour")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("ClientId");

                    b.HasIndex("VoitureId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("tpvoiture.Models.Marque", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("marques");
                });

            modelBuilder.Entity("tpvoiture.Models.Voiture", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MarqueId")
                        .HasColumnType("int");

                    b.Property<string>("couleur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nbr_places")
                        .HasColumnType("int");

                    b.Property<int>("nbr_portes")
                        .HasColumnType("int");

                    b.Property<string>("photo_1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("MarqueId");

                    b.ToTable("voitures");
                });

            modelBuilder.Entity("tpvoiture.Models.Assurance", b =>
                {
                    b.HasOne("tpvoiture.Models.Voiture", "voiture")
                        .WithMany("assurances")
                        .HasForeignKey("VoitureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("voiture");
                });

            modelBuilder.Entity("tpvoiture.Models.Location", b =>
                {
                    b.HasOne("tpvoiture.Models.Client", "client")
                        .WithMany("locations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tpvoiture.Models.Voiture", "Voiture")
                        .WithMany("locations")
                        .HasForeignKey("VoitureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("Voiture");
                });

            modelBuilder.Entity("tpvoiture.Models.Voiture", b =>
                {
                    b.HasOne("tpvoiture.Models.Marque", "Marque")
                        .WithMany("voitures")
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("tpvoiture.Models.Client", b =>
                {
                    b.Navigation("locations");
                });

            modelBuilder.Entity("tpvoiture.Models.Marque", b =>
                {
                    b.Navigation("voitures");
                });

            modelBuilder.Entity("tpvoiture.Models.Voiture", b =>
                {
                    b.Navigation("assurances");

                    b.Navigation("locations");
                });
#pragma warning restore 612, 618
        }
    }
}
